generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  name         String
  email        String     @unique
  passwordHash String
  role         Role       @default(STUDENT)
  createdAt    DateTime   @default(now())
  progress     Progress[]
  comments     Comment[]
}

model Course {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  description String?
  thumbnail   String?
  createdAt   DateTime @default(now())
  lessons     Lesson[]
}

model Lesson {
  id       String     @id @default(uuid())
  course   Course     @relation(fields: [courseId], references: [id])
  courseId String
  title    String
  content  String?
  videoUrl String?
  order    Int        @default(0)
  quizzes  Quiz[]
  comments Comment[]
  progress Progress[]
}

model Quiz {
  id       String @id @default(uuid())
  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId String
  question String
  options  String // JSON stringified or use Json type if supported
  answer   String
}

model Progress {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  lesson    Lesson   @relation(fields: [lessonId], references: [id])
  lessonId  String
  completed Boolean  @default(false)
  score     Float?
  updatedAt DateTime @updatedAt
}

model Comment {
  id              String   @id @default(uuid())
  lesson          Lesson   @relation(fields: [lessonId], references: [id])
  lessonId        String
  user            User     @relation(fields: [userId], references: [id])
  userId          String
  content         String
  parentCommentId String?
  createdAt       DateTime @default(now())
}

enum Role {
  ADMIN
  STUDENT
  INSTRUCTOR
}
